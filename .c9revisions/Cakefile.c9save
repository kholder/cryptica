{"ts":1350536115584,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"fs = require 'fs'\r\n\r\n{print} = require 'sys'\r\n{spawn} = require 'child_process'\r\n\r\nbuild = (callback) ->\r\n  coffee = spawn 'coffee', ['-c', '-o', 'lib', 'src']\r\n  coffee.stderr.on 'data', (data) ->\r\n    process.stderr.write data.toString()\r\n  coffee.stdout.on 'data', (data) ->\r\n    print data.toString()\r\n  coffee.on 'exit', (code) ->\r\n    callback?() if code is 0\r\n\r\ntask 'build', 'Build lib/ from src/', ->\r\n  build()\r\n\r\ntask 'watch', 'Watch src/ for changes', ->\r\n    coffee = spawn 'coffee', ['-w', '-c', '-o', 'lib', 'src']\r\n    coffee.stderr.on 'data', (data) ->\r\n      process.stderr.write data.toString()\r\n    coffee.stdout.on 'data', (data) ->\r\n      print data.toString()"]],"start1":0,"start2":0,"length1":0,"length2":682}]],"length":682}
{"contributors":[],"silentsave":false,"ts":1350536137957,"patch":[[{"diffs":[[1,"fs = require 'fs'\r\n\r\n{print} = require 'sys'\r\n{spawn} = require 'child_process'\r\n\r\nbuild = (callback) ->\r\n  coffee = spawn 'coffee', ['-c', '-o', 'lib', 'src']\r\n  coffee.stderr.on 'data', (data) ->\r\n    process.stderr.write data.toString()\r\n  coffee.stdout.on 'data', (data) ->\r\n    print data.toString()\r\n  coffee.on 'exit', (code) ->\r\n    callback?() if code is 0\r\n\r\ntask 'build', 'Build lib/ from src/', ->\r\n  build()\r\n\r\ntask 'watch', 'Watch src/ for changes', ->\r\n    coffee = spawn 'coffee', ['-w', '-c', '-o', 'lib', 'src']\r\n    coffee.stderr.on 'data', (data) ->\r\n      process.stderr.write data.toString()\r\n    coffee.stdout.on 'data', (data) ->\r\n      print data.toString()"]],"start1":0,"start2":0,"length1":0,"length2":682}]],"length":682,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350536229888,"patch":[[{"diffs":[[0,"re '"],[-1,"sys'\r\n{spawn} = require 'child_process'\r\n\r\nbuild = (callback) ->\r\n  coffee = spawn 'coffee', ['-c', '-o', 'lib', 'src']\r\n  coffee.stderr.on 'data', (data) ->\r\n    process.stderr.write data.toString()\r\n  coffee.stdout.on 'data', (data) ->\r\n    print data.toString()\r\n  coffee.on 'exit', (code) ->\r\n    callback?() if code is 0\r\n\r\ntask 'build', 'Build lib/ from src/', ->\r\n  build()\r\n\r\ntask 'watch', 'Watch src/ for changes', ->\r\n    coffee = spawn 'coffee', ['-w', '-c', '-o', 'lib', 'src']\r\n    coffee.stderr.on 'data', (data) ->\r\n      process.stderr.write data.toString()\r\n    coffee.stdout.on 'data', (data) ->\r\n      print data.toString()fs = require 'fs'\r\n\r\n{print} = require 'sys"],[1,"util"],[0,"'\r\n{"]],"start1":36,"start2":36,"length1":693,"length2":12}]],"length":683,"saved":false}
